# Mastery Project Code
# Jack Haley, Mustafa Said, Pranshu Dash, Virrajith Mallavarapu
import PCF8591 as ADC
import RPi.GPIO as GPIO
import time

Buzzer = 13    # pin11
Buzzer2 = 29

sonicBtn = 15
photoBtn = 31

TRIG = 11
ECHO = 12

DO = 18
GPIO.setmode(GPIO.BOARD)

def setup(pin, pin2):
	GPIO.setwarnings(False)
	
	ADC.setup(0x48)
	GPIO.setup(DO, GPIO.IN)
	
	GPIO.setup(TRIG, GPIO.OUT)     #ultrasonic ranger setup
	GPIO.setup(ECHO, GPIO.IN)
	
	global BuzzerPin    # buzzer setup
	BuzzerPin = pin
	GPIO.setup(BuzzerPin, GPIO.OUT)
	GPIO.output(BuzzerPin, GPIO.HIGH)
	
	global BuzzerPin2    # buzzer setup
	BuzzerPin2 = pin2       # Numbers GPIOs by physical location
	GPIO.setup(BuzzerPin2, GPIO.OUT)
	GPIO.output(BuzzerPin2, GPIO.HIGH)
	
	GPIO.setup(sonicBtn, GPIO.IN, pull_up_down=GPIO.PUD_UP) # button setup
	GPIO.add_event_detect(sonicBtn, GPIO.BOTH, callback=sdetect, bouncetime=500)
	
	GPIO.setup(photoBtn, GPIO.IN, pull_up_down=GPIO.PUD_UP) # button setup
	GPIO.add_event_detect(photoBtn, GPIO.BOTH, callback=pdetect, bouncetime=500)

def distance():
	GPIO.output(TRIG, 0)
	time.sleep(0.000002)

	GPIO.output(TRIG, 1)
	time.sleep(0.00001)
	GPIO.output(TRIG, 0)

	
	while GPIO.input(ECHO) == 0:
		a = 0
	time1 = time.time()
	while GPIO.input(ECHO) == 1:
		a = 1
	time2 = time.time()
	
	during = time2 - time1
	return during * 340 / 2 * 100

def uresult(x):
	global ultratoggle
	if(x != 0):
		if(ultratoggle == True):
			ultratoggle = False
		else:
			ultratoggle = True
	time.sleep(0.5)

def presult(x):
	global phototoggle
	if(x != 0):
		if(phototoggle == True):
			phototoggle = False
		else:
			phototoggle = True
	time.sleep(0.5)

def loop():
	global ultratoggle
	global phototoggle
	while True:
		global ultratoggle
		global phototoggle
		if(ultratoggle):
			ultraloop()
		if(phototoggle):
			photoloop()

def ultraloop():
	dis = distance()
	if dis < 35.0:
		sonicBeep(0.5)
	time.sleep(0.5)

def photoloop():
	print ('Value: ', ADC.read(0))
	if(ADC.read(0) < 85):
		photoBeep(0.5)

def sonicOn():
	GPIO.output(BuzzerPin, GPIO.LOW)

def sonicOff():
	GPIO.output(BuzzerPin, GPIO.HIGH)

def sonicBeep(x):
	sonicOn()
	time.sleep(x)
	sonicOff()
	time.sleep(x)

def photoBeep(x):
	photoOn()
	time.sleep(x)
	photoOff()
	time.sleep(x)

def photoOn():
	GPIO.output(BuzzerPin2, GPIO.LOW)

def photoOff():
	GPIO.output(BuzzerPin2, GPIO.HIGH)

def pdetect(chn):
	presult(GPIO.input(photoBtn))

def sdetect(chn):
	uresult(GPIO.input(sonicBtn))

def destroy():
	GPIO.output(BuzzerPin, GPIO.HIGH)
	GPIO.output(BuzzerPin2, GPIO.HIGH)
	GPIO.cleanup()

if __name__ == "__main__":
	phototoggle = False
	ultratoggle = False
	setup(Buzzer, Buzzer2)
	try:
		loop()
	except KeyboardInterrupt:
		destroy()
